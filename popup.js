// Generated by CoffeeScript 1.8.0
(function() {
  var renderUser;

  renderUser = function() {
    return chrome.runtime.sendMessage({
      type: 'user-info',
      interactive: false
    }, function(user_info) {
      if (!user_info.error) {
        $('#signin').hide();
        $('#revoke').show();
        return $('#user').html("<div>\n  <span class=\"name\">Logged in as: " + user_info.login + "</span>\n  <img src=\"" + user_info.avatar_url + "\"/>\n</div>");
      } else {
        $('#signin').show();
        $('#revoke').hide();
        return $('#user').html("<div>\n  <span class=\"name\">Error detected: </span>\n  <span class=\"error\">" + user_info.error + "</span>\n</div>");
      }
    });
  };

  $(document).ready(function() {
    return gh.tokenFetcher.getToken(false, function(error, access_token) {
      var el, _i, _len, _ref, _results;
      console.log(access_token, 'PANDA');
      $('#signin').on('click', function(e) {
        return gh.interactiveSignIn(function() {
          $('#signin').hide();
          $('#revoke').show();
          chrome.browserAction.setIcon({
            path: "github-good.png"
          });
          return renderUser();
        });
      });
      $('#revoke').on('click', function(e) {
        gh.revokeToken();
        $('#user').empty();
        $('#signin').show();
        return $('#revoke').hide();
      });
      if (access_token) {
        $('#user').empty();
        $('#signin').hide();
        $('#revoke').show();
        renderUser();
      } else {
        $('#user').empty();
        $('#signin').show();
        $('#revoke').hide();
      }
      $('#navigation > div').on('click', function(e) {
        var $nav, cls;
        $nav = $(e.currentTarget);
        cls = $nav.attr('class');
        return $nav.closest('body').attr('class', cls);
      });
      $('.nav.config > input').on('click', function(e) {
        var $check, val;
        $check = $(e.currentTarget);
        val = $check.val();
        return chrome.runtime.sendMessage({
          type: 'set-config',
          config: val,
          val: $check.is(':checked')
        });
      });
      _ref = $('.nav.config > input');
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        el = _ref[_i];
        _results.push((function() {
          var $el, val;
          $el = $(el);
          val = $el.val();
          return chrome.runtime.sendMessage({
            type: 'get-config',
            config: val
          }, function(data) {
            console.log(data, 'PANDA');
            return $el.prop('checked', data === 'true' || false);
          });
        })());
      }
      return _results;
    });
  });

}).call(this);
