// Generated by CoffeeScript 1.8.0
(function() {
  var executeContent, old_url;

  old_url = '';

  if (window.urlWatchInterval) {
    clearInterval(window.urlWatchInterval);
  }

  window.urlWatchInterval = setInterval((function() {
    if (old_url !== window.location.href) {
      executeContent();
      return old_url = window.location.href;
    }
  }), 1000);

  executeContent = function() {
    var a, coffeescript, div, h1, h3, iframe, img, inject_key, input, link, markNew, old_entry, p, page, parseQueryString, per_page, query, query_str, raw, repo, script, search_page, span, teacup, url, _ref;
    console.log('CONTENT EXECUTED');
    parseQueryString = function() {
      var objURL, str;
      str = window.location.search;
      objURL = {};
      str.replace(new RegExp('([^?=&]+)(=([^&]*))?', 'g'), function($0, $1, $2, $3) {
        objURL[$1] = $3;
      });
      return objURL;
    };
    markNew = function(ticket, difference) {
      var $el;
      console.log('NEW');
      $el = $("li[data-issue-id='" + ticket + "']");
      return $el.find('.issue-title > a').append("<span class = 'new-comments' style= 'color:purple;'>\n  " + difference + " new comments\n</span>");
    };
    teacup = window.window.teacup;
    span = teacup.span, div = teacup.div, a = teacup.a, h1 = teacup.h1, h3 = teacup.h3, p = teacup.p, iframe = teacup.iframe, raw = teacup.raw, script = teacup.script, coffeescript = teacup.coffeescript, link = teacup.link, input = teacup.input, img = teacup.img;
    old_entry = null;
    url = parseQueryString();
    console.log(localStorage, 'wakka');
    search_page = !!((_ref = $('#js-issues-search')) != null ? _ref.length : void 0);
    console.log('wakka');
    if (search_page) {
      console.log('here');
      query = $('#js-issues-search').val();
      repo = $('head > meta[property="og:title"]').attr('content');
      query = query.replace(/\s/g, '+');
      query_str = "" + query;
      per_page = $('[data-issue-id]').length;
      page = url.page || '1';
      return chrome.runtime.sendMessage({
        type: 'search-info',
        query: query_str,
        repo: repo,
        page: page,
        per_page: per_page
      }, function(data) {
        var comments, item, num, _i, _len, _ref1, _results;
        _ref1 = (data != null ? data.items : void 0) || [];
        _results = [];
        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
          item = _ref1[_i];
          if (!localStorage[item.html_url]) {
            continue;
          }
          comments = item.comments + 1;
          num = parseInt(localStorage[item.html_url]);
          console.log(num, comments, 'panda');
          $("li[data-issue-id='" + item.number + "'] .new-comments").remove();
          if (num < comments) {
            _results.push(markNew(item.number, comments - num));
          } else if (num > comments) {
            _results.push(localStorage[item.html_url] = comments);
          } else {
            _results.push(console.log('do nothing they are equal'));
          }
        }
        return _results;
      });
    } else {
      console.log('WAHT');
      if (window.location.href.indexOf('issues/new') !== -1) {
        return;
      }
      if (window.location.href.indexOf('/issues/') !== -1) {
        return;
      }
      console.log('rrrrr');
      inject_key = (function(_this) {
        return function() {
          var comments, key, _ref1;
          console.log('injection');
          key = window.location.href;
          comments = (_ref1 = $('.timeline-comment-wrapper > .comment')) != null ? _ref1.length : void 0;
          console.log('set', key, comments);
          return localStorage[key] = comments;
        };
      })(this);
      inject_key();
      return window.addEventListener("beforeunload", function(e) {
        return inject_key();
      });
    }
  };

}).call(this);
